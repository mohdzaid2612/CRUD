{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/crud-demo/src/Screen/Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchingData } from '../redux/ReducerComponents/User/Action';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Main({\n  userData,\n  fetchingData\n}) {\n  _s();\n\n  var _userData$users;\n\n  useEffect(() => {\n    fetchingData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: (userData === null || userData === void 0 ? void 0 : userData.loading) == true ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 45\n    }, this) : (userData === null || userData === void 0 ? void 0 : userData.error) ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: userData === null || userData === void 0 ? void 0 : userData.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 85\n    }, this) : userData === null || userData === void 0 ? void 0 : (_userData$users = userData.users) === null || _userData$users === void 0 ? void 0 : _userData$users.map(user => {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: user === null || user === void 0 ? void 0 : user.title\n      }, user === null || user === void 0 ? void 0 : user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 25\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Main, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Main;\n\nconst mapStateToProps = state => {\n  console.log(state.user);\n  return {\n    userData: state === null || state === void 0 ? void 0 : state.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchingData: () => dispatch(fetchingData())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/mac/Desktop/crud-demo/src/Screen/Main.js"],"names":["React","useEffect","connect","fetchingData","Main","userData","loading","error","users","map","user","title","id","mapStateToProps","state","console","log","mapDispatchToProps","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,wCAA7B;;;AAGA,SAASC,IAAT,CAAc;AAAEC,EAAAA,QAAF;AAAYF,EAAAA;AAAZ,CAAd,EAA0C;AAAA;;AAAA;;AAEtCF,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,YAAY;AACf,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI;AAAA,cAEQ,CAAAE,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEC,OAAV,KAAqB,IAArB,gBAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA5B,GAAkD,CAAAD,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEE,KAAV,iBAAkB;AAAA,gBAAKF,QAAL,aAAKA,QAAL,uBAAKA,QAAQ,CAAEE;AAAf;AAAA;AAAA;AAAA;AAAA,YAAlB,GAA+CF,QAA/C,aAA+CA,QAA/C,0CAA+CA,QAAQ,CAAEG,KAAzD,oDAA+C,gBAAiBC,GAAjB,CAAsBC,IAAD,IAAU;AAC5H,0BACI;AAAA,kBAAmBA,IAAnB,aAAmBA,IAAnB,uBAAmBA,IAAI,CAAEC;AAAzB,SAAQD,IAAR,aAAQA,IAAR,uBAAQA,IAAI,CAAEE,EAAd;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH,KAJgG;AAFzG;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GAjBQR,I;;KAAAA,I;;AAoBT,MAAMS,eAAe,GAAGC,KAAK,IAAI;AAC7BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACJ,IAAlB;AACA,SAAO;AACHL,IAAAA,QAAQ,EAAES,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEJ;AADd,GAAP;AAGH,CALD;;AAOA,MAAMO,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHf,IAAAA,YAAY,EAAE,MAAMe,QAAQ,CAACf,YAAY,EAAb;AADzB,GAAP;AAGH,CAJD;;AAMA,eAAeD,OAAO,CAACW,eAAD,EAAkBI,kBAAlB,CAAP,CAA6Cb,IAA7C,CAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { fetchingData } from '../redux/ReducerComponents/User/Action'\n\n\nfunction Main({ userData, fetchingData }) {\n\n    useEffect(() => {\n        fetchingData()\n    }, [])\n\n    return (\n        <div>\n            {\n                userData?.loading == true ? <h1>Loading...</h1> : userData?.error ? <h1>{userData?.error}</h1> : userData?.users?.map((user) => {\n                    return (\n                        <p key={user?.id}>{user?.title}</p>\n                    )\n                })\n            }\n        </div>\n    )\n}\n\n\nconst mapStateToProps = state => {\n    console.log(state.user)\n    return {\n        userData: state?.user\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchingData: () => dispatch(fetchingData())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Main)\n"]},"metadata":{},"sourceType":"module"}