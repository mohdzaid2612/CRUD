{"ast":null,"code":"import { act } from 'react-dom/test-utils';\nimport { USER_REQUEST, USER_DATA, USER_FAILURE } from './ActionType';\nconst initialState = {\n  loading: false,\n  users: [],\n  error: ''\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case USER_REQUEST:\n      return { ...state,\n        loading: true\n      };\n\n    case USER_DATA:\n      console.log(\"action.payload USER\", action.payload);\n      return { ...state,\n        loading: false,\n        users: action.payload,\n        error: ''\n      };\n\n    case USER_FAILURE:\n      return { ...state,\n        loading: false,\n        users: [],\n        error: action.payload\n      };\n\n    default:\n      return false;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/mac/Desktop/crud-demo/src/redux/ReducerComponents/User/Reducer.js"],"names":["act","USER_REQUEST","USER_DATA","USER_FAILURE","initialState","loading","users","error","reducer","state","action","type","console","log","payload"],"mappings":"AAAA,SAASA,GAAT,QAAoB,sBAApB;AACA,SAASC,YAAT,EAAuBC,SAAvB,EAAkCC,YAAlC,QAAsD,cAAtD;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,KADQ;AAEjBC,EAAAA,KAAK,EAAE,EAFU;AAGjBC,EAAAA,KAAK,EAAE;AAHU,CAArB;;AAQA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKV,YAAL;AACI,aAAO,EACH,GAAGQ,KADA;AAEHJ,QAAAA,OAAO,EAAE;AAFN,OAAP;;AAIJ,SAAKH,SAAL;AACIU,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCH,MAAM,CAACI,OAA1C;AACA,aAAO,EACH,GAAGL,KADA;AAEHJ,QAAAA,OAAO,EAAE,KAFN;AAGHC,QAAAA,KAAK,EAAEI,MAAM,CAACI,OAHX;AAIHP,QAAAA,KAAK,EAAE;AAJJ,OAAP;;AAMJ,SAAKJ,YAAL;AACI,aAAO,EACH,GAAGM,KADA;AAEHJ,QAAAA,OAAO,EAAE,KAFN;AAGHC,QAAAA,KAAK,EAAE,EAHJ;AAIHC,QAAAA,KAAK,EAAEG,MAAM,CAACI;AAJX,OAAP;;AAMJ;AAAS,aAAO,KAAP;AArBb;AAuBH,CAxBD;;AA0BA,eAAeN,OAAf","sourcesContent":["import { act } from 'react-dom/test-utils'\nimport { USER_REQUEST, USER_DATA, USER_FAILURE } from './ActionType'\n\nconst initialState = {\n    loading: false,\n    users: [],\n    error: ''\n}\n\n\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case USER_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n        case USER_DATA:\n            console.log(\"action.payload USER\", action.payload)\n            return {\n                ...state,\n                loading: false,\n                users: action.payload,\n                error: ''\n            }\n        case USER_FAILURE:\n            return {\n                ...state,\n                loading: false,\n                users: [],\n                error: action.payload\n            }\n        default: return false\n    }\n}\n\nexport default reducer"]},"metadata":{},"sourceType":"module"}