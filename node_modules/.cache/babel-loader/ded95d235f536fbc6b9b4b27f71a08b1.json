{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/crud-demo/src/Screen/AddForm.js\";\nimport React from 'react';\nimport { Formik } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddForm() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"formContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"innerFormContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Anywhere in your app!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          email: '',\n          password: ''\n        },\n        validate: values => {\n          const errors = {};\n\n          if (!values.email) {\n            errors.email = 'Required';\n          } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n            errors.email = 'Invalid email address';\n          }\n\n          return errors;\n        },\n        onSubmit: (values, {\n          setSubmitting\n        }) => {\n          setTimeout(() => {\n            alert(JSON.stringify(values, null, 2));\n            setSubmitting(false);\n          }, 400);\n        },\n        children: ({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting\n          /* and other goodies */\n\n        }) => /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            onChange: handleChange,\n            onBlur: handleBlur,\n            value: values.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 29\n          }, this), errors.email && touched.email && errors.email, /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            onChange: handleChange,\n            onBlur: handleBlur,\n            value: values.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, this), errors.password && touched.password && errors.password, /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: isSubmitting,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\n\n_c = AddForm;\nexport default AddForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddForm\");","map":{"version":3,"sources":["/Users/mac/Desktop/crud-demo/src/Screen/AddForm.js"],"names":["React","Formik","AddForm","email","password","values","errors","test","setSubmitting","setTimeout","alert","JSON","stringify","touched","handleChange","handleBlur","handleSubmit","isSubmitting"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,QAAvB;;;AAIA,SAASC,OAAT,GAAmB;AACf,sBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,MAAD;AACI,QAAA,aAAa,EAAE;AAAEC,UAAAA,KAAK,EAAE,EAAT;AAAaC,UAAAA,QAAQ,EAAE;AAAvB,SADnB;AAEI,QAAA,QAAQ,EAAEC,MAAM,IAAI;AAChB,gBAAMC,MAAM,GAAG,EAAf;;AACA,cAAI,CAACD,MAAM,CAACF,KAAZ,EAAmB;AACfG,YAAAA,MAAM,CAACH,KAAP,GAAe,UAAf;AACH,WAFD,MAEO,IACH,CAAC,2CAA2CI,IAA3C,CAAgDF,MAAM,CAACF,KAAvD,CADE,EAEL;AACEG,YAAAA,MAAM,CAACH,KAAP,GAAe,uBAAf;AACH;;AACD,iBAAOG,MAAP;AACH,SAZL;AAaI,QAAA,QAAQ,EAAE,CAACD,MAAD,EAAS;AAAEG,UAAAA;AAAF,SAAT,KAA+B;AACrCC,UAAAA,UAAU,CAAC,MAAM;AACbC,YAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeP,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;AACAG,YAAAA,aAAa,CAAC,KAAD,CAAb;AACH,WAHS,EAGP,GAHO,CAAV;AAIH,SAlBL;AAAA,kBAoBK,CAAC;AACEH,UAAAA,MADF;AAEEC,UAAAA,MAFF;AAGEO,UAAAA,OAHF;AAIEC,UAAAA,YAJF;AAKEC,UAAAA,UALF;AAMEC,UAAAA,YANF;AAOEC,UAAAA;AACA;;AARF,SAAD,kBAUG;AAAM,UAAA,QAAQ,EAAED,YAAhB;AAAA,kCACI;AACI,YAAA,IAAI,EAAC,OADT;AAEI,YAAA,IAAI,EAAC,OAFT;AAGI,YAAA,QAAQ,EAAEF,YAHd;AAII,YAAA,MAAM,EAAEC,UAJZ;AAKI,YAAA,KAAK,EAAEV,MAAM,CAACF;AALlB;AAAA;AAAA;AAAA;AAAA,kBADJ,EAQKG,MAAM,CAACH,KAAP,IAAgBU,OAAO,CAACV,KAAxB,IAAiCG,MAAM,CAACH,KAR7C,eASI;AACI,YAAA,IAAI,EAAC,UADT;AAEI,YAAA,IAAI,EAAC,UAFT;AAGI,YAAA,QAAQ,EAAEW,YAHd;AAII,YAAA,MAAM,EAAEC,UAJZ;AAKI,YAAA,KAAK,EAAEV,MAAM,CAACD;AALlB;AAAA;AAAA;AAAA;AAAA,kBATJ,EAgBKE,MAAM,CAACF,QAAP,IAAmBS,OAAO,CAACT,QAA3B,IAAuCE,MAAM,CAACF,QAhBnD,eAiBI;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,QAAQ,EAAEa,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AA9BR;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA4DH;;KA7DQf,O;AA+DT,eAAeA,OAAf","sourcesContent":["import React from 'react'\nimport { Formik } from 'formik';\n\n\n\nfunction AddForm() {\n    return (\n        <div className=\"formContainer\">\n            <div className=\"innerFormContainer\">\n                <h1>Anywhere in your app!</h1>\n                <Formik\n                    initialValues={{ email: '', password: '' }}\n                    validate={values => {\n                        const errors = {};\n                        if (!values.email) {\n                            errors.email = 'Required';\n                        } else if (\n                            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n                        ) {\n                            errors.email = 'Invalid email address';\n                        }\n                        return errors;\n                    }}\n                    onSubmit={(values, { setSubmitting }) => {\n                        setTimeout(() => {\n                            alert(JSON.stringify(values, null, 2));\n                            setSubmitting(false);\n                        }, 400);\n                    }}\n                >\n                    {({\n                        values,\n                        errors,\n                        touched,\n                        handleChange,\n                        handleBlur,\n                        handleSubmit,\n                        isSubmitting,\n                        /* and other goodies */\n                    }) => (\n                        <form onSubmit={handleSubmit}>\n                            <input\n                                type=\"email\"\n                                name=\"email\"\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                value={values.email}\n                            />\n                            {errors.email && touched.email && errors.email}\n                            <input\n                                type=\"password\"\n                                name=\"password\"\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                value={values.password}\n                            />\n                            {errors.password && touched.password && errors.password}\n                            <button type=\"submit\" disabled={isSubmitting}>\n                                Submit\n           </button>\n                        </form>\n                    )}\n                </Formik>\n            </div>\n        </div>\n    )\n}\n\nexport default AddForm\n"]},"metadata":{},"sourceType":"module"}