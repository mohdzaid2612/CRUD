{"ast":null,"code":"import { act } from 'react-dom/test-utils';\nimport { USER_REQUEST, USER_DATA, USER_FAILURE, ADD_DATA } from './ActionType';\nconst initialState = {\n  loading: false,\n  users: [],\n  error: '',\n  newData: []\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case USER_REQUEST:\n      return {\n        loading: true\n      };\n\n    case USER_DATA:\n      return {\n        loading: false,\n        users: action.payload,\n        error: '',\n        newData: []\n      };\n\n    case USER_FAILURE:\n      return {\n        loading: false,\n        users: [],\n        error: action.payload\n      };\n\n    case ADD_DATA:\n      return {\n        newData: action.payload\n      };\n\n    default:\n      return false;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/mac/Desktop/crud-demo/src/redux/ReducerComponents/User/Reducer.js"],"names":["act","USER_REQUEST","USER_DATA","USER_FAILURE","ADD_DATA","initialState","loading","users","error","newData","reducer","state","action","type","payload"],"mappings":"AAAA,SAASA,GAAT,QAAoB,sBAApB;AACA,SAASC,YAAT,EAAuBC,SAAvB,EAAkCC,YAAlC,EAAgDC,QAAhD,QAAgE,cAAhE;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,KADQ;AAEjBC,EAAAA,KAAK,EAAE,EAFU;AAGjBC,EAAAA,KAAK,EAAE,EAHU;AAIjBC,EAAAA,OAAO,EAAE;AAJQ,CAArB;;AASA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKZ,YAAL;AACI,aAAO;AACHK,QAAAA,OAAO,EAAE;AADN,OAAP;;AAGJ,SAAKJ,SAAL;AACI,aAAO;AACHI,QAAAA,OAAO,EAAE,KADN;AAEHC,QAAAA,KAAK,EAAEK,MAAM,CAACE,OAFX;AAGHN,QAAAA,KAAK,EAAE,EAHJ;AAIHC,QAAAA,OAAO,EAAE;AAJN,OAAP;;AAMJ,SAAKN,YAAL;AACI,aAAO;AACHG,QAAAA,OAAO,EAAE,KADN;AAEHC,QAAAA,KAAK,EAAE,EAFJ;AAGHC,QAAAA,KAAK,EAAEI,MAAM,CAACE;AAHX,OAAP;;AAKJ,SAAKV,QAAL;AACI,aAAO;AACHK,QAAAA,OAAO,EAAEG,MAAM,CAACE;AADb,OAAP;;AAGJ;AAAS,aAAO,KAAP;AAtBb;AAwBH,CAzBD;;AA2BA,eAAeJ,OAAf","sourcesContent":["import { act } from 'react-dom/test-utils'\nimport { USER_REQUEST, USER_DATA, USER_FAILURE, ADD_DATA } from './ActionType'\n\nconst initialState = {\n    loading: false,\n    users: [],\n    error: '',\n    newData: []\n}\n\n\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case USER_REQUEST:\n            return {\n                loading: true\n            }\n        case USER_DATA:\n            return {\n                loading: false,\n                users: action.payload,\n                error: '',\n                newData: []\n            }\n        case USER_FAILURE:\n            return {\n                loading: false,\n                users: [],\n                error: action.payload\n            }\n        case ADD_DATA:\n            return {\n                newData: action.payload,\n            }\n        default: return false\n    }\n}\n\nexport default reducer"]},"metadata":{},"sourceType":"module"}