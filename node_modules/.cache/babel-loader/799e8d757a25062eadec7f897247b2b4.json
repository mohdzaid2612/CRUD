{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/crud-demo/src/Screen/Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchingData } from '../redux/ReducerComponents/User/Action';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Main({\n  userData,\n  fetchingData\n}) {\n  _s();\n\n  useEffect(() => {\n    fetchingData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to Redux\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), (userData === null || userData === void 0 ? void 0 : userData.loading) ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading..\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 37\n    }, this) : (userData === null || userData === void 0 ? void 0 : userData.error) ? userData === null || userData === void 0 ? void 0 : userData.error : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: userData && (userData === null || userData === void 0 ? void 0 : userData.users) && (userData === null || userData === void 0 ? void 0 : userData.map(user => {\n        return /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: user === null || user === void 0 ? void 0 : user.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 37\n        }, this);\n      }))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Main, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Main;\n\nconst mapStateToProps = state => {\n  return {\n    userData: state === null || state === void 0 ? void 0 : state.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchingData: () => dispatch(fetchingData())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/mac/Desktop/crud-demo/src/Screen/Main.js"],"names":["React","useEffect","connect","fetchingData","Main","userData","loading","error","users","map","user","name","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,wCAA7B;;;AAGA,SAASC,IAAT,CAAc;AAAEC,EAAAA,QAAF;AAAYF,EAAAA;AAAZ,CAAd,EAA0C;AAAA;;AAEtCF,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,YAAY;AACf,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAGQ,CAAAE,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEC,OAAV,iBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAApB,GAAyC,CAAAD,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEE,KAAV,IAAkBF,QAAlB,aAAkBA,QAAlB,uBAAkBA,QAAQ,CAAEE,KAA5B,gBACrC;AAAA,gBAEQF,QAAQ,KAAIA,QAAJ,aAAIA,QAAJ,uBAAIA,QAAQ,CAAEG,KAAd,CAAR,KAA+BH,QAA/B,aAA+BA,QAA/B,uBAA+BA,QAAQ,CAAEI,GAAV,CAAeC,IAAD,IAAU;AACnD,4BACI;AAAA,oBAAKA,IAAL,aAAKA,IAAL,uBAAKA,IAAI,CAAEC;AAAX;AAAA;AAAA;AAAA;AAAA,gBADJ;AAGH,OAJ8B,CAA/B;AAFR;AAAA;AAAA;AAAA;AAAA,YAJZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH;;GAxBQP,I;;KAAAA,I;;AA2BT,MAAMQ,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHR,IAAAA,QAAQ,EAAEQ,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEH;AADd,GAAP;AAGH,CAJD;;AAMA,MAAMI,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHZ,IAAAA,YAAY,EAAE,MAAMY,QAAQ,CAACZ,YAAY,EAAb;AADzB,GAAP;AAGH,CAJD;;AAMA,eAAeD,OAAO,CAACU,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CV,IAA7C,CAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { fetchingData } from '../redux/ReducerComponents/User/Action'\n\n\nfunction Main({ userData, fetchingData }) {\n\n    useEffect(() => {\n        fetchingData()\n    }, [])\n\n    return (\n        <div>\n            <h1>Welcome to Redux</h1>\n            {\n                userData?.loading ? <h1>Loading..</h1> : userData?.error ? userData?.error : (\n                    <div>\n                        {\n                            userData && userData?.users && userData?.map((user) => {\n                                return (\n                                    <h1>{user?.name}</h1>\n                                )\n                            })\n                        }\n                    </div>\n                )\n            }\n        </div>\n    )\n}\n\n\nconst mapStateToProps = state => {\n    return {\n        userData: state?.user\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchingData: () => dispatch(fetchingData())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Main)\n"]},"metadata":{},"sourceType":"module"}